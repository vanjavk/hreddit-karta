viewbox1="0.0002207 0.0000545 1096.7519531 1061.5228271"
viewbox2="242 -134.5228271 1096.7519531 1061.5228271"


vb1=list(map(float,viewbox1.split()))
vb2=list(map(float,viewbox2.split()))
print(vb1)
print(vb2)
#difx=(vb1[3]-vb1[1])/(vb2[3]-vb2[1])
x=vb1[0]-vb2[0]
y=vb1[1]-vb2[1]

#x=-300
#y=1060.5717773-138.3263245
input="342.4201355,138.3263245 341.98172,136.6671143 342.2326355,135.4401245         343.3860168,135.4273987 344.4153137,134.4752197 346.1770325,135.1022339 348.3782349,135.2711182 350.8821106,135.4655151         352.3000183,136.9611206 353.037323,136.8800354 353.85672,135.8780212 355.8596191,135.5831299 355.7795105,134.9083252         356.5354309,134.1622314 356.3430176,133.6930237 353.7532349,134.2750244 352.881134,133.7809143 352.3576355,132.2155151         351.7366333,131.9904175 351.7004395,129.924408 351.1858215,129.5924072 349.8752136,129.604126 348.7405396,128.9972229         347.3713379,129.2091064 346.9641113,128.7843323 347.0129395,127.9513321 346.2668152,127.6754227 347.7024231,125.6090164         348.3782349,125.8351212 348.9680176,125.4401321 349.1604309,124.4132156 349.0530396,122.8673172 348.4358215,122.5353165         347.9924316,120.0934067 347.7737122,119.7052231 347.1076355,118.5211258 346.6555176,117.7262344 346.0071106,117.0880356         343.3508301,114.4703293 342.1428223,114.5333328 341.3655396,114.2013321 340.3362122,111.9972305 336.2082214,107.3571243         335.7737122,106.8683243 334.6653137,105.6232224 333.0285339,104.1261215 331.1721191,103.0494156 330.2951355,102.5421219         329.5930176,101.7413254 327.4592285,99.305336 323.8508301,98.6222305 322.66922,97.7584152 321.9270325,98.0460281         319.8879395,95.9674149 319.1594238,95.7921219 318.6223145,96.0870285 316.9133301,95.2091293 316.0598145,95.6481247         314.5256348,92.6051254 314.1047363,92.6432266 314.0285339,93.3629227 313.0090332,94.0582352 312.4504395,95.0719223         312.8078308,95.4420242 314.2844238,95.2291336 314.2707214,95.6920242 310.9201355,98.6354141 310.6741333,99.8121262         310.9299316,101.7350235 310.5266113,102.805336 308.8987122,102.805336 307.0344238,100.275032 305.4866333,99.298027         300.4328308,97.7521286 298.849823,96.1613235 298.4153137,96.6119308 298.6614075,97.1881332 299.9983215,98.2604141         301.6584167,99.0299301 305.6701355,100.075325 306.7922363,101.1959305 307.2707214,102.7550278 309.0334167,105.3414078         309.0149231,105.8541336 307.2219238,106.055336 307.3655396,106.525032 309.7756348,106.8063278 310.8039246,107.4073257         314.5071106,108.2902298 315.1203308,108.8780289 315.0041199,109.2853317 314.1184387,108.9542313 312.6516113,108.9601364         310.5940247,110.9083328 304.990509,113.4933243 304.1174316,113.9322281 303.3977356,114.3014145 302.5832214,113.024025         302.0920105,113.5563278 298.6076355,111.2213364 297.5744324,110.669136 296.1076355,110.5763321 295.1506348,110.9630356         293.3215332,108.9484177 292.6770325,109.2921219 292.4582214,108.6530228 290.8039246,108.8234177 289.2512207,109.7052231         288.7463074,110.8263321 288.7903137,112.8922348 289.2610168,116.5680313 289.0735168,117.7511215 289.3723145,118.2770309         290.0920105,118.7653275 290.6203308,118.6212234 291.7698364,117.0563278 293.0842285,116.9869308 293.4641113,117.3883286         294.0949097,117.5631332 294.5959167,116.899025 295.4319153,117.2882309 295.9201355,116.9933243 296.2727356,115.9049301         296.7024231,115.8170242 296.881134,116.8121262 297.4231262,116.5680313 298.04422,115.3341293 298.755127,114.7330246         299.1047363,113.8561325 298.8000183,113.325325 298.4241333,113.3683243 298.5989075,112.9049301 299.0823364,112.8102341         299.5022278,112.930336 300.1907349,113.0050278 300.880127,113.1241226 301.9758301,113.6813278 301.9172363,114.6700211         301.537323,115.1783218 297.0246277,118.5533218 296.3137207,119.5113297 293.7951355,119.5411301 292.7756348,118.4772263         291.9885254,118.9093246 291.9612122,119.7994156 290.3157349,120.1119308 287.7131348,119.3673325 287.3684082,118.4772263         287.256134,115.1720352 287.4983215,114.0944138 286.4055176,113.6002274 286.0715332,112.5040359 286.5637207,111.8473282         287.4983215,111.3082352 287.6907349,109.305336 287.5520325,108.5719223 285.1907349,106.650032 285.7854309,106.0983353         285.3205261,105.8292313 283.3078308,106.4430313 281.787323,106.2921219 279.9885254,104.9030228 278.2668152,104.4952316         277.1399231,103.4313278 276.3479309,103.6632309 270.8430176,103.150032 270.2297363,102.5172348 269.380127,102.9064102         267.7571106,102.6051254 266.5403137,102.8810349 265.1272278,102.6862259 263.1008301,101.9591293 261.7590332,98.9860306         261.7864075,98.1593246 260.7932129,97.8771286 259.974823,98.9860306 258.8606262,99.3243332 257.8459167,97.9523239         255.9983215,98.3151321 255.6448212,99.649025 254.3352203,99.5123215 253.9856262,98.778923 253.2033234,98.7101364         252.7649231,99.2101364 251.3157196,98.5040359 247.635025,98.5602341 246.7492218,100.1871262 245.3186188,100.7203293         244.7239227,102.2613297 244.1330261,103.7882309 243.1535187,105.1031265 242.3557281,106.0353317 242.3557281,117.0612259         242.9348145,117.7389297 244.3030243,117.5699234 249.3879242,115.8424149 250.1399231,115.1403275 250.8782196,115.1593246         251.3655243,114.6022263 251.5530243,115.3282242 250.6672211,117.1622238 248.6233215,118.9655228 247.138916,119.6481247         244.817627,122.1212234 242.9699249,126.6110306 242.3557281,125.6754227 242.3557281,147.1438446 312.8333435,128.1438446         342.4201355,138.3253174"

inp=input.split()
points=list(map(lambda a: list(map(float,a.split(","))),input.split()))
print(x,y)
for i in range(len(points)):
    points[i][0]+=x
    points[i][1]+=y
print(" ".join([str(x)+","+str(y) for x,y in points]))
